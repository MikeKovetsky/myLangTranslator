/**
 * Created by Kovetsky on 20.12.2016.
 */

var State = function (alpha, label, beta, stack, inequalityMsg, equalityMsg, lexemeCode, mpaBeta, mpaStack) {
    this.alpha = alpha;
    this.label = label;
    this.beta = beta;
    this.stack = stack;
    this.inequalityMsg = inequalityMsg;
    this.equalityMsg = equalityMsg;
    this.lexemeCode = lexemeCode;
    this.mpaBeta = mpaBeta;
    this.mpaStack = mpaStack;
};

 State.prototype.toString = function() {
  return ""
  // return "Alpha:" + this.alpha + ", label:" + this.label + ", beta:" + this.beta
}


var states = [
    new State(1, 'program', 2, '', '[!=] отсутствует program', '', 1, '', ''),
    new State(2, 'IDN', 3, '', '[!=] отсутствует IDN после program', '', 32, '', ''),
    new State(3, 'П', 4, '', '[!=] отсутствует перенос', '', 34, '', ''),
    new State(4, 'int', 5, '', '[!=] отсутствует тип данных', '', 4, '', ''),
    new State(5, 'IDN', 6, '', '[!=] отсутствует IDN после типа', '', 32, '', ''),
    new State(6, ',', 5, '', '[!=] отсутствует , или переход на новую строку', '', 15, '', ''),
    new State(6, 'П', 7, '', '[!=] отсутствует , или переход на новую строку', '', 34, '', ''),
    new State(7, 'begin', 8, '', '[!=] отсутствует begin', '', 2, '', ''),
    new State(7, 'int', 5, '', '[!=] отсутствует int', '', 4, '', ''),
    new State(36, 'П', 11, '', '[!=] отсутствует перенос', '', 34, '', ''),
    new State(8, 'П', 11, 9, '[!=] отсутствует перенос', '', 34, '', ''),
    new State(9, 'П', 10, '', '[!=] отсутствует перенос', '', 34, '', ''),
    new State(10, 'end', '', '', '', '[=] выход', 3, 11, 9),
    new State(11, 'in', 12, '', '[!=] отсутствует оператор', '', 10, '', ''),
    new State(11, 'out', 12, '', '[!=] отсутствует оператор', '', 11, '', ''),
    new State(11, 'IDN', 15, '', '[!=] отсутствует оператор', '', 32, '', ''),
    new State(11, 'for', 17, '', '[!=] отсутствует оператор', '', 5, '', ''),
    new State(11, 'if', 32, 24, '[!=] отсутствует оператор', '', 12, '', ''),
    new State(12, '(', 13, '', '[!=] отсутствует ( после if', '', 21, '', ''),
    new State(13, 'IDN', 14, '', '[!=] отсутствует IDN', '', 32, '', ''),
    new State(14, ',', 13, '', '[!=] отсутствует , или )', '[=] выход', 15, '', ''),
    new State(14, ')', '', '', 'exit', '', 22, -1, ''), // в двух местах выход?
    new State(15, '=', 29, 16, '[!=] отсутствует = )', '', 16, '', ''),
    new State(16, 'Неописана дуга', '', '', 'выход', '', '', -1, ''),
    new State(17, 'IDN', 18, '', '[!=] отсутствует IDN', '', 32, '', ''),
    new State(18, '=', 29, 19, '[!=] отсутствует =', '', 16, '', ''),
    new State(19, 'to', 29, 20, '[!=] отсутствует оператор', '', 6, '', ''),
    new State(20, 'step', 29, 21, '[!=] отсутствует оператор', '', 7, '', ''),
    new State(21, 'do', 11, 22, '[!=] отсутствует оператор', '', 8, '', ''),
    new State(22, 'П', 23, '', '[!=] отсутствует перенос', '', 34, '', ''),
    new State(23, 'next', '', '', '', '[=] выход', 9, 11, 22),
    new State(24, 'П', 11, 25, '[!=] отсутствует перенос', '', 34, '', ''),
    new State(25, 'П', 26, '', '[!=] отсутствует перенос', '', 34, '', ''),
    new State(26, 'else', 11, 25, '[!=] отсутствует else', '', 13, 11, 27),
    new State(27, 'П', 28, '', '[!=] отсутствует перенос', '', 34, '', ''),
    new State(28, 'endif', '', '', '[!=] отсутствует endif', '[=] выход', 14, 11, 27),
    new State(29, 'IDN', 31, '', '[!=] отсутствует IDN или CON или (', '', 32, '', ''),
    new State(29, 'CON', 31, '', '[!=] отсутствует IDN или CON или (', '', 33, '', ''),
    new State(29, '(', 29, 30, '[!=] отсутствует IDN или CON или (', '', 21, '', ''),
    new State(30, ')', 31, '', '[!=] отсутствует )', '', 22, '', ''),
    new State(31, '+', 29, '', '[!=] отсутствует знак =-*/^ ','', 17, -1, ''),
    new State(31, '-', 29, '', '[!=] отсутствует знак =-*/^','', 18, -1, ''),
    new State(31, '*', 29, '', '[!=] отсутствует знак =-*/^','', 19, -1, ''),
    new State(31, '/', 29, '', '[!=] отсутствует знак =-*/^','', 20, -1, ''),
    new State(31, '^', 29, '', '[!=] отсутствует знак =-*/^','', 31, -1, ''),
    new State(32, '!', 32, '', '[!=] отсутствует знак отношения в лог выражении', '', 35, 29, 33),
    new State(32, '(', 32, 34,'[!=] отсутствует (', '', 21, 29, 33),
    new State(33, '<', 29, 35, '[!=] отсутствует знак отношения в лог выражении', '', 24, '', ''),
    new State(33, '<=', 29, 35, '[!=] отсутствует знак отношения в лог выражении', '', 28, '', ''),
    new State(33, '==', 29, 35, '[!=] отсутствует знак отношения в лог выражении', '', 26, '', ''),
    new State(33, '!=', 29, 35, '[!=] отсутствует знак отношения в лог выражении', '', 27, '', ''),
    new State(33, '>=', 29, 35, '[!=] отсутствует знак отношения в лог выражении', '', 29, '', ''),
    new State(33, '>', 29, 35, '[!=] отсутствует знак отношения в лог выражении', '', 23, '', ''),
    new State(34, ')', 35, '', '[!=] отсутствует ) в лог выражении', '', 22, '', ''),
    new State(35, '&&', 32, '', '[!=] выход','', 25, -1, ''),
    new State(35, '||', 32, '', '[!=] выход','', 30, -1, '')
];
